{"version":3,"sources":["components/button/Button.tsx","components/SmallCard/SmallCard.tsx","components/formControls/FormControls.tsx","utils/validation/validator.ts","components/formAddContact/FormAddContact.tsx","redux/actionCreators.ts","components/modal/Modal.tsx","pages/home/HomePage.tsx","utils/addElementToMass/addElementToMass.ts","utils/deleteElementMassById.ts","components/formAddNewField/formAddNewField.tsx","components/formEditContact/FormEditContact.tsx","utils/parsingInputData/parsingInputData.ts","utils/AddToObject/addToObject.ts","pages/detail/DetailPage.tsx","utils/updateObjById/updateObjById.ts","utils/deleteObjElementById/deleteObjElementById.ts","App.tsx","redux/reducer.tsx","redux/store.ts","index.tsx","components/modal/modal.module.css","pages/detail/detail.module.css","components/SmallCard/card.module.css","components/formControls/formControls.module.css","components/formAddContact/form.module.css","pages/home/home.module.css","components/button/button.module.css"],"names":["Button","value","onClick","className","classes","btn","SmallCard","contact","id","showModal","addIdContactToLocalStorage","key","localStorage","removeItem","setItem","JSON","stringify","block","image","undefined","img","src","alt","name","btn_group","to","FormControl","children","meta","touched","error","showError","spanError","Input","props","input","restprops","field","Textarea","requiredField","validateSumbol","RegExp","test","validateEmail","validatePhone","validateText","AddContactReduxForm","reduxForm","form","handleSubmit","activateAddMode","e","stopPropagation","onSubmit","spanForm","bForm","Field","component","validate","formSummaryError","actions","contacts","type","Modal","isModalActive","cn","modal","active","modal_content","HomePage","setState","addMode","formData","mass","newMass","push","addElementToMass","deleteContact","parseInt","getItem","splice","deleteElementMassById","isRemoveContact","show","state","container","this","map","index","toString","Component","AddNewFieldReduxForm","showModalWithForm","EditContactReduxForm","activateEditMode","keys","useState","setIsModalActive","form_edit","bForm_edit","handleOnClick","text","split","obj","addToObject","DetailPage","editMode","setEditMode","Object","initialValues","data","updateObjById","enumKeys","div","i","length","image_block","info_block","showContact","newObj","deleteObjElementById","App","path","element","connect","app","idContact","initialState","email","phone","address","reducer","action","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4aba5636.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from './button.module.css';\r\n\r\ntype propsType = {\r\n    value: string\r\n    onClick?: (e?:any) => void\r\n}\r\n\r\nexport const Button: React.FC<propsType> = ({value, onClick}) => {\r\n    return (\r\n        <div>\r\n            <button className={classes.btn} onClick={onClick}> {value} </button>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./card.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"../button/Button\";\r\n\r\n\r\ntype propsType = {\r\n    contact: any\r\n    id: number\r\n    showModal: (show: boolean) => void\r\n}\r\n\r\nexport const SmallCard: React.FC<propsType> = ({contact, id, showModal}) => {\r\n\r\n    const addIdContactToLocalStorage = (key: string) => {\r\n        localStorage.removeItem(key);\r\n        localStorage.setItem(key, JSON.stringify(id));\r\n    };\r\n    const onClickForDeleteContact = () => {\r\n        showModal(true);\r\n        addIdContactToLocalStorage(\"removeId\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.block}>\r\n            <div className={classes.image}>\r\n                {contact.img === undefined\r\n                    ? <img src={`img/user.png`} alt=\"\"/>\r\n                    : <img src={`img/${contact.img}`} alt=\"\"/>\r\n                }\r\n\r\n            </div>\r\n            <div className={classes.name}>\r\n                <span>{contact.name}</span>\r\n            </div>\r\n            <div className={classes.btn_group}>\r\n                <NavLink to={`/detail/${id}`}> <Button value={\"детальнее\"}\r\n                                                       onClick={() => addIdContactToLocalStorage('id')}/></NavLink>\r\n                <Button value={\"удалить контакт\"} onClick={onClickForDeleteContact}>delete contact</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport classes from \"./formControls.module.css\"\r\nimport {WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\r\n\r\n\r\ntype formPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<formPropsType> = ({children, meta: {touched, error}}) => {\r\n    const showError = touched && error;//meta.touched - сидят данные быь ли тронут инпут, meta.error- сидит вид ошибки\r\n    return (\r\n        <div className={showError ? classes.error : undefined}>\r\n            {children}<br/>\r\n            {showError && <span className={classes.spanError}>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restprops} = props;\r\n    return <FormControl {...props}> <input {...input} {...restprops} className={classes.field}/></FormControl>\r\n\r\n};\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restprops} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restprops} className={classes.field}/></FormControl>\r\n};","export type validatorType = (value: string) => string | undefined\r\n\r\n\r\nexport const requiredField: validatorType = (value) => {\r\n    if (value) return undefined;\r\n    return \"Поле обязательно к заполнению\";\r\n};\r\n\r\nexport const validateSumbol: validatorType = (value) => {\r\n    if (value !== undefined) {\r\n        let regex = new RegExp(/^[а-яА-ЯёЁa-zA-Z ]+$/i);\r\n        if (!regex.test(value)) return (`разрешен ввод только букв`);\r\n    }\r\n    return undefined;\r\n};\r\nexport const validateEmail: validatorType = (value) => {\r\n    if (value !== undefined) {\r\n        let regex = new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9-]+.+.[A-Z]{2,4}$/i);\r\n        if (!regex.test(value)) return (`Введите корректный email`);\r\n    }\r\n    return undefined;\r\n};\r\nexport const validatePhone: validatorType = (value) => {\r\n    if (value !== undefined) {\r\n        let regex = new RegExp(/[^0-9.]/g);\r\n        if (regex.test(value)) return (`Разрешен ввод только цифр`);\r\n    }\r\n    return undefined;\r\n};\r\nexport const validateText: validatorType = (value) => {\r\n    if (value !== undefined) {\r\n        let regex = new RegExp(/^[A-Z0-9._]+[:]+[A-Z0-9._]+$/i);\r\n        if (!regex.test(value)) return (`введите шаблон типа  email:test@test.com`);\r\n    }\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport classes from \"./form.module.css\";\r\nimport {Input, Textarea} from \"../formControls/FormControls\";\r\nimport {\r\n    requiredField,\r\n    validateEmail,\r\n    validatePhone,\r\n    validateSumbol\r\n} from \"../../utils/validation/validator\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Button} from \"../button/Button\";\r\n\r\n\r\ntype ownPropsType = {\r\n    activateAddMode: (activ: boolean) => void\r\n}\r\n\r\n\r\nconst ContactForm: React.FC<InjectedFormProps<ownPropsType> & ownPropsType> = ({handleSubmit, error, activateAddMode}) => {\r\n    return (\r\n        <div onClick={() => activateAddMode(false)}>\r\n            <form onClick={(e)=> e.stopPropagation()} onSubmit={handleSubmit} className={classes.form}>\r\n                <span className={classes.spanForm}> Добавление контакта </span>\r\n                <b className={classes.bForm}>Введите имя</b>\r\n                <Field name={'name'}\r\n                       component={Input}\r\n                       validate={[requiredField, validateSumbol]}/>\r\n                <b className={classes.bForm}>Введите email</b>\r\n                <Field name={'email'}\r\n                       component={Input}\r\n                       validate={[validateEmail]}/>\r\n                <b className={classes.bForm}>Введите телефон</b>\r\n                <Field name={'phone'}\r\n                       component={Input}\r\n                       validate={[validatePhone]}/>\r\n                <b className={classes.bForm}>Введите адрес</b>\r\n                <Field name={'address'}\r\n                       component={Textarea}\r\n                />\r\n                {\r\n                    error && <div className={classes.formSummaryError}> {error}</div>\r\n                }\r\n                <Button value={\"Сохранить\"}/>\r\n            </form>\r\n            <Button onClick={() => activateAddMode(false)} value={\"отмена\"}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst AddContactReduxForm = reduxForm<ownPropsType>({\r\n    form: 'addContact'\r\n    // @ts-ignore\r\n})(ContactForm);\r\n\r\n\r\nexport default AddContactReduxForm;\r\n","import {InferActionType} from \"./store\";\r\nimport {contactType} from \"./reducer\";\r\n\r\nexport type ActionsType = InferActionType<typeof actions>;\r\n\r\n\r\nexport const actions = {\r\n    setContacts: (contacts: Array<contactType>) => ({type: \"SET_CONTACTS\", contacts} as const),\r\n    setIdContact: (id: number) => ({type: \"SET_ID_CONTACT\", id} as const)\r\n};","import React from \"react\";\r\nimport classes from \"./modal.module.css\"\r\nimport cn from 'classnames';\r\n\r\ntype propsType = {\r\n    showModal: (show: boolean) => void\r\n    isModalActive: boolean\r\n}\r\n\r\nexport const Modal: React.FC<propsType> = ({children, showModal, isModalActive}) => {\r\n\r\n\r\n    return (\r\n        <div className={isModalActive ? cn(classes.modal, classes.active) : classes.modal}\r\n             onClick={() => showModal(false)}>\r\n            <div className={isModalActive ? cn(classes.modal_content, classes.active) : classes.modal_content}\r\n                 onClick={(e) => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React, {Component} from \"react\";\r\nimport classes from \"./home.module.css\"\r\nimport {SmallCard} from \"../../components/SmallCard/SmallCard\";\r\nimport AddContactReduxForm from \"../../components/formAddContact/FormAddContact\";\r\nimport {actions} from \"../../redux/actionCreators\";\r\nimport {contactType} from \"../../redux/reducer\";\r\nimport {Modal} from \"../../components/modal/Modal\";\r\nimport {Button} from \"../../components/button/Button\";\r\nimport {addElementToMass} from \"../../utils/addElementToMass/addElementToMass\";\r\nimport {deleteElementMassById} from \"../../utils/deleteElementMassById\";\r\n\r\n\r\ninterface IState {\r\n    addMode: boolean\r\n    isRemoveContact: boolean\r\n    isModalActive: boolean\r\n}\r\n\r\n\r\ntype propsType = {\r\n    contacts: Array<contactType>\r\n}\r\n\r\n\r\nexport class HomePage extends Component<propsType, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            addMode: false,\r\n            isRemoveContact: false,\r\n            isModalActive: false\r\n        };\r\n    }\r\n\r\n    activateAddMode = (active: boolean) => {\r\n        this.setState({addMode: active});\r\n    };\r\n\r\n    onSubmit = (formData: any) => {\r\n        actions.setContacts(addElementToMass(this.props.contacts, formData));\r\n        this.activateAddMode(false);\r\n    };\r\n    deleteContact = () => {\r\n        // @ts-ignore\r\n        let id = parseInt(localStorage.getItem('removeId'));\r\n        actions.setContacts(deleteElementMassById(this.props.contacts, id));\r\n        this.setState({isRemoveContact: true});\r\n        this.showModal(false);\r\n    };\r\n    showModal = (show: boolean) => {\r\n        this.setState({isModalActive: show});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.container}>\r\n                {\r\n                    this.state.addMode\r\n                        ? <AddContactReduxForm onSubmit={this.onSubmit}\r\n                            // @ts-ignore\r\n                                               activateAddMode={this.activateAddMode}\r\n                        />\r\n                        : <div>\r\n                            {this.props.contacts.map((e: any, index: number) =>\r\n                                <SmallCard key={index.toString()}\r\n                                           contact={e} id={index}\r\n                                           showModal={this.showModal}\r\n                                />)}\r\n                            <Button value={\"Добавить контакт\"} onClick={() => this.activateAddMode(true)}/>\r\n                        </div>\r\n                }\r\n                {\r\n\r\n                    <Modal showModal={this.showModal}\r\n                           isModalActive={this.state.isModalActive}>\r\n                        <p>Удалить контакт?</p>\r\n                        <div className={classes.btn_group}>\r\n                            <Button value={\"Удалить\"} onClick={this.deleteContact}/>\r\n                            <Button value={\"Отменить\"} onClick={() => this.showModal(false)}/>\r\n                        </div>\r\n\r\n                    </Modal>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","export const addElementToMass = (mass: Array<any>, formData: any) => {\r\n    let newMass = mass;\r\n    newMass.push(formData);\r\n    return newMass;\r\n};","export const deleteElementMassById = (mass: Array<any>, id: number) => {\r\n    let newMass = mass;\r\n    newMass.splice(id, 1);\r\n    return newMass;\r\n};","import React from \"react\";\r\nimport classes from \"../formAddContact/form.module.css\";\r\nimport {Input} from \"../formControls/FormControls\";\r\nimport {validateText} from \"../../utils/validation/validator\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Button} from \"../button/Button\";\r\n\r\n\r\n\r\ntype ownPropsType = {\r\n    showModalWithForm: (activ: boolean) => void\r\n}\r\n\r\n\r\nconst Form: React.FC<InjectedFormProps<ownPropsType> & ownPropsType> = ({handleSubmit, error, showModalWithForm}) => {\r\n    return (\r\n        <div onClick={() => showModalWithForm(false)}>\r\n            <form onClick={(e)=> e.stopPropagation()} onSubmit={handleSubmit} className={classes.form}>\r\n                <p>Добавление поля</p>\r\n                <Field name={'text'}\r\n                       component={Input}\r\n                       validate={ [validateText]}/>\r\n                <div className={classes.btn_group}>\r\n                    <Button value={\"добавить\"} />\r\n                    <Button value={\"Отменить\"} onClick={() => showModalWithForm(false)}/>\r\n                </div>\r\n                {\r\n                    error && <div className={classes.formSummaryError}> {error}</div>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst AddNewFieldReduxForm = reduxForm<ownPropsType>({\r\n    form: 'addNewField'\r\n    // @ts-ignore\r\n})(Form);\r\n\r\n\r\nexport default AddNewFieldReduxForm;\r\n","import React, {useState} from \"react\";\r\nimport classes from \"../formAddContact/form.module.css\";\r\nimport {Input, Textarea} from \"../formControls/FormControls\";\r\nimport {\r\n    requiredField,\r\n    validateEmail,\r\n    validatePhone,\r\n    validateSumbol\r\n} from \"../../utils/validation/validator\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Button} from \"../button/Button\";\r\nimport {Modal} from \"../modal/Modal\";\r\nimport AddNewFieldReduxForm from \"../formAddNewField/formAddNewField\";\r\nimport {parsingInputData} from \"../../utils/parsingInputData/parsingInputData\";\r\nimport {actions} from \"../../redux/actionCreators\";\r\nimport {addToObject} from \"../../utils/AddToObject/addToObject\";\r\n\r\n\r\ntype ownPropsType = {\r\n    activateEditMode: (active: boolean) => void\r\n    keys: Array<string>\r\n    showModal: (show: boolean) => void\r\n    id: number\r\n    contacts: any\r\n}\r\n\r\n\r\nconst ContactForm: React.FC<InjectedFormProps<ownPropsType> & ownPropsType> = ({handleSubmit, error, activateEditMode, keys, showModal, id, contacts}) => {\r\n    let [isModalActive, setIsModalActive] = useState(false);\r\n    const handleOnClick = (e: string) => {\r\n        showModal(true);\r\n        localStorage.removeItem(e);\r\n        localStorage.setItem(\"field\", e);\r\n    };\r\n    const showModalWithForm = (show: boolean) => {\r\n        setIsModalActive(show);\r\n    };\r\n    const onSubmit = (formData: any) => {\r\n        let mass = parsingInputData(formData.text);\r\n        contacts[id] = addToObject(contacts[id], mass);\r\n        actions.setContacts(contacts);\r\n        showModalWithForm(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.container} onClick={() => activateEditMode(false)}>\r\n            <form onClick={(e) => e.stopPropagation()} onSubmit={handleSubmit} className={classes.form}>\r\n                <span className={classes.spanForm}> Редактирование контакта </span>\r\n                {\r\n                    keys.map((e: any, index: number) =>\r\n                        <div className={classes.form_edit} key={index.toString()}>\r\n                            <b className={classes.bForm_edit}>{e}</b>\r\n                            <Field name={e}\r\n                                   component={e === \"address\" ? Textarea : Input}\r\n                                   validate={e === \"name\" ? [requiredField, validateSumbol] : e === \"phone\" ? [validatePhone] : e === \"email\" ? [validateEmail] : []}/>\r\n                            <button onClick={() => handleOnClick(e)}>X</button>\r\n                        </div>\r\n                    )\r\n                }\r\n                {\r\n                    error && <div className={classes.formSummaryError}> {error}</div>\r\n                }\r\n\r\n                <div className={classes.btn_group}>\r\n                    <Button value={\"Сохранить\"}/>\r\n                    <Button onClick={() => activateEditMode(false)} value={\"назад\"}/>\r\n                </div>\r\n            </form>\r\n            <div onClick={(e) => e.stopPropagation()}>\r\n                <Button value={\"добавить поле\"} onClick={() => showModalWithForm(true)}/>\r\n                <Modal showModal={showModalWithForm}\r\n                       isModalActive={isModalActive}>\r\n                    {// @ts-ignore\r\n                    }<AddNewFieldReduxForm showModalWithForm={showModalWithForm} onSubmit={onSubmit}/>\r\n                </Modal>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst EditContactReduxForm = reduxForm<ownPropsType>({\r\n    form: 'editContact'\r\n    // @ts-ignore\r\n})(ContactForm);\r\n\r\n\r\nexport default EditContactReduxForm;\r\n","export const parsingInputData =(data:string)=>{\r\n    return data.split(\":\");\r\n};","export const addToObject = (obj: any, mass: Array<string>) => {\r\n    return obj[mass[0]] = mass[1];\r\n};","import React, {useState} from \"react\";\r\nimport classes from \"./detail.module.css\"\r\nimport {Button} from \"../../components/button/Button\";\r\nimport EditContactReduxForm from \"../../components/formEditContact/FormEditContact\";\r\nimport {actions} from \"../../redux/actionCreators\";\r\nimport {updateObjById} from \"../../utils/updateObjById/updateObjById\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {deleteObjElementById} from \"../../utils/deleteObjElementById/deleteObjElementById\";\r\nimport {Modal} from \"../../components/modal/Modal\";\r\n\r\n\r\ntype propsType = {\r\n    contacts: any\r\n}\r\n\r\nexport const DetailPage: React.FC<propsType> = ({contacts}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [isModalActive, setIsModalActive] = useState(false);\r\n\r\n    let id = parseInt(localStorage.getItem('id') as string);\r\n    let keys = Object.keys(contacts[id]);\r\n\r\n\r\n    const activateEditMode = (active: boolean) => {\r\n        setEditMode(active);\r\n    };\r\n\r\n    const showContact = (obj: any, enumKeys: Array<string>) => {\r\n        let div = [];\r\n        for (let i = 0; i <= enumKeys.length; i++) {\r\n            div.push(<div className={classes.block} key={i.toString()}>\r\n                {enumKeys[i] === \"img\" ?\r\n                    <div className={classes.image_block}><img src={`../img/${obj[enumKeys[i]]}`} alt=\"\"/></div>\r\n                    : <div className={classes.info_block}>\r\n                        <span>{enumKeys[i]}</span>\r\n                        <span>{obj[enumKeys[i]]}</span></div>\r\n                }\r\n            </div>)\r\n        }\r\n        return div;\r\n    };\r\n    const onSubmit = (formData: any) => {\r\n        actions.setContacts(updateObjById(contacts, id, formData));\r\n        activateEditMode(false);\r\n    };\r\n    const deleteField = () => {\r\n        showModal(false);\r\n        let key = localStorage.getItem('field');\r\n        key !== null && (contacts[id] = deleteObjElementById(contacts[id], key));\r\n        actions.setContacts(contacts);\r\n    };\r\n\r\n    const showModal = (show: boolean) => {\r\n        setIsModalActive(show);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {editMode\r\n                // @ts-ignore\r\n                ? <EditContactReduxForm activateEditMode={activateEditMode}\r\n                                        keys={keys}\r\n                                        initialValues={contacts[id]}\r\n                                        onSubmit={onSubmit}\r\n                                        showModal={showModal}\r\n                                        id={id}\r\n                                        contacts={contacts}\r\n                />\r\n                : <div>{showContact(contacts[id], keys)}\r\n                    <Button value={\"редактировать\"} onClick={() => activateEditMode(true)}/>\r\n                    <NavLink to={\"/\"}><Button value={\"отмена\"}/></NavLink>\r\n                </div>\r\n            }\r\n            <Modal showModal={showModal}\r\n                   isModalActive={isModalActive}>\r\n                <p>Удалить поле?</p>\r\n                <div className={classes.btn_group}>\r\n                    <Button value={\"Удалить\"} onClick={deleteField}/>\r\n                    <Button value={\"Отменить\"} onClick={() => showModal(false)}/>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n};","export const updateObjById = (mass:Array<any>,id:number, data:any) => {\r\n  let newMass = mass;\r\n    newMass[id] = data;\r\n    return newMass\r\n};","export const deleteObjElementById = (obj: any, key: string) => {\r\n    let newObj = obj;\r\n    delete newObj[key];\r\n    return newObj;\r\n};","import React, {Component} from 'react';\nimport {Route, Routes} from \"react-router-dom\";\nimport './App.css';\nimport {HomePage} from \"./pages/home/HomePage\";\nimport {DetailPage} from \"./pages/detail/DetailPage\";\nimport {AppStateType} from \"./redux/store\";\nimport {connect} from \"react-redux\";\n\n\ntype mapStatePropsType = ReturnType<typeof mapStateToProps>\ntype mapDispatchPropsType = {}\ntype propsType = mapStatePropsType & mapDispatchPropsType\n\ninterface IComponent {\n}\n\n\nexport class App extends Component <propsType, IComponent> {\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header/>\n                <main>\n                    <Routes>\n                        <Route path='/' element={<HomePage contacts={this.props.contacts}\n                        />}/>\n                        <Route path='/detail/:contactId' element={<DetailPage contacts={this.props.contacts}/>}/>\n                        <Route path='*' element={<div> 404 not found </div>}/>\n                    </Routes>\n                </main>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    contacts: state.app.contacts,\n    idContact: state.app.idContact\n});\n\nexport default connect(mapStateToProps, {})(App);\n","import {ActionsType} from \"./actionCreators\";\r\n\r\nexport type contactType = {\r\n    img: string\r\n    name: string\r\n    email: string\r\n    phone: number\r\n    address: string\r\n}\r\n\r\nlet initialState = {\r\n    contacts: [\r\n        {\r\n            img: \"user.png\",\r\n            name: \"Vlad Holt\",\r\n            email: \"jhgh@jhg.kjl\",\r\n            phone: 123456,\r\n            address: \"USA\"\r\n        }\r\n    ],\r\n    idContact: 0\r\n};\r\nexport type initialStateType = typeof initialState;\r\n\r\n\r\nconst reducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_CONTACTS\":\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            };\r\n        case \"SET_ID_CONTACT\":\r\n            return {\r\n                ...state,\r\n                idContact: action.id\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import {combineReducers, compose, createStore} from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\ntype RootReduserType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReduserType>;\r\ntype PropertyTypes<T> = T extends { [key: string]: infer U } ? U : never\r\nexport  type InferActionType<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertyTypes<T>>\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        app: reducer,\r\n        form: formReducer,\r\n    }\r\n);\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    //applyMiddleware()\r\n));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App  />\n        </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__MgAwY\",\"active\":\"modal_active__137m3\",\"modal_content\":\"modal_modal_content__Z-fKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"detail_container__3eup-\",\"block\":\"detail_block__1d_T-\",\"info_block\":\"detail_info_block__2AlnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"card_block__3Um1b\",\"name\":\"card_name__24MFk\",\"btn_group\":\"card_btn_group__1m0AW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"formControls_field__1YJiq\",\"error\":\"formControls_error__1btax\",\"spanError\":\"formControls_spanError__2zFFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"form_container__2JRGn\",\"btnAddField\":\"form_btnAddField__3hJin\",\"form\":\"form_form__3gXI2\",\"spanForm\":\"form_spanForm__tIRrt\",\"bForm\":\"form_bForm__28U-W\",\"bForm_edit\":\"form_bForm_edit__DAtZU\",\"formSummaryError\":\"form_formSummaryError__20Pyq\",\"form_edit\":\"form_form_edit__TsKUO\",\"btn_group\":\"form_btn_group__V56ZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__1F6Hy\",\"btn_group\":\"home_btn_group__2UQEz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"button_btn__1TP5W\"};"],"sourceRoot":""}